width = 6, height = 3,
bg = 'transparent',
paper = 'special',
units = 'in',
useDingbats=FALSE,
compress = FALSE,
dpi = 300)
setwd('~/Documents/USAID/Rwanda/data in/Rwanda_Admin1/')
rw_adm1 = readOGR(dsn=".", layer="Province_Boundary_2006")
rw_adm1@data$id = rownames(rw_adm1@data)
adm1.points = fortify(rw_adm1, region="id")
adm1.df = plyr::join(adm1.points, rw_lakes@data, by="id")
adm1.centroids = data.frame(coordinates(rw_adm1)) %>%
rename(long = X1, lat = X2)
adm1.centroids = data.frame(coordinates(rw_adm1)) %>%
rename(long = X1, lat = X2)
adm1.centroids = cbind(adm1.centroids,
district = rw_adm1@data$Province)
ggplot(adm1.df) +
aes(x = long, y = lat) +
geom_polygon(aes(group = id),
fill = grey30K)
colourRegions = '#fc8d59'
colourLakes = '#a6cee3'
x = ggplot(adm1.df) +
aes(x = long, y = lat) +
geom_polygon(aes(group = id),
fill = grey30K) +
geom_path(aes(group = id, colour = Province),
size = 0.2) +
geom_path(aes(group = id),
colour = 'white',
data = rw.df,
size = 0.1) +
geom_polygon(aes(group = id), #lakes
fill = colourLakes,
data = lakes.df) +
coord_equal() +
theme_blank() +
scale_colour_manual(values =c('Northern Province' = '#377eb8',
'Kigali City' ='#e41a1c',
'Western Province' = '#ff7f00',
'Southern Province' = '#984ea3',
'Eastern Province' = '#4daf4a'))
geom_text(aes(x = long, y = lat, label = district),
data = rw.centroids,
colour = grey90K,
size = 0.7) +
geom_text(aes(x = long, y = lat, label = Province),
data = adm1.centroids,
colour = grey90K,
size = 0.7)
ggsave('~/Documents/USAID/Rwanda/CHAIN/plots/rwanda_labeled.pdf',
width = 5, height = 3.5,
bg = 'transparent',
paper = 'special',
units = 'in',
useDingbats=FALSE,
compress = FALSE,
dpi = 300)
adm1.centroids = data.frame(coordinates(rw_adm1)) %>%
rename(long = X1, lat = X2)
adm1.centroids = cbind(adm1.centroids,
province = rw_adm1@data$Province)
x = ggplot(adm1.df) +
aes(x = long, y = lat) +
geom_polygon(aes(group = id),
fill = grey30K) +
geom_path(aes(group = id, colour = Province),
size = 0.2) +
geom_path(aes(group = id),
colour = 'white',
data = rw.df,
size = 0.1) +
geom_polygon(aes(group = id), #lakes
fill = colourLakes,
data = lakes.df) +
coord_equal() +
theme_blank() +
scale_colour_manual(values =c('Northern Province' = '#377eb8',
'Kigali City' ='#e41a1c',
'Western Province' = '#ff7f00',
'Southern Province' = '#984ea3',
'Eastern Province' = '#4daf4a'))
geom_text(aes(x = long, y = lat, label = district),
data = rw.centroids,
colour = grey90K,
size = 0.7) +
geom_text(aes(x = long, y = lat, label = province),
data = adm1.centroids,
colour = grey90K,
size = 0.7)
x = ggplot(adm1.df) +
aes(x = long, y = lat) +
geom_polygon(aes(group = id),
fill = grey30K) +
geom_path(aes(group = id, colour = Province),
size = 0.2) +
geom_path(aes(group = id),
colour = 'white',
data = rw.df,
size = 0.1) +
geom_polygon(aes(group = id), #lakes
fill = colourLakes,
data = lakes.df) +
coord_equal() +
theme_blank() +
scale_colour_manual(values =c('Northern Province' = '#377eb8',
'Kigali City' ='#e41a1c',
'Western Province' = '#ff7f00',
'Southern Province' = '#984ea3',
'Eastern Province' = '#4daf4a')) +
geom_text(aes(x = long, y = lat, label = district),
data = rw.centroids,
colour = grey90K,
size = 0.7) +
geom_text(aes(x = long, y = lat, label = province),
data = adm1.centroids,
colour = grey90K,
size = 0.7)
ggsave('~/Documents/USAID/Rwanda/CHAIN/plots/rwanda_labeled.pdf',
width = 5, height = 3.5,
bg = 'transparent',
paper = 'special',
units = 'in',
useDingbats=FALSE,
compress = FALSE,
dpi = 300)
x = ggplot(adm1.df) +
aes(x = long, y = lat) +
geom_polygon(aes(group = id),
fill = grey30K) +
geom_path(aes(group = id, colour = id),
size = 0.2) +
geom_path(aes(group = id),
colour = 'white',
data = rw.df,
size = 0.1) +
geom_polygon(aes(group = id), #lakes
fill = colourLakes,
data = lakes.df) +
coord_equal() +
theme_blank() +
scale_colour_brewer(palette = 'Set1') +
# scale_colour_manual(values =c('Northern Province' = '#377eb8',
#                               'Kigali City' ='#e41a1c',
#                               'Western Province' = '#ff7f00',
#                               'Southern Province' = '#984ea3',
#                               'Eastern Province' = '#4daf4a')) +
geom_text(aes(x = long, y = lat, label = district),
data = rw.centroids,
colour = grey90K,
size = 0.7) +
geom_text(aes(x = long, y = lat, label = province),
data = adm1.centroids,
colour = grey90K,
size = 0.7)
ggsave('~/Documents/USAID/Rwanda/CHAIN/plots/rwanda_labeled.pdf',
width = 5, height = 3.5,
bg = 'transparent',
paper = 'special',
units = 'in',
useDingbats=FALSE,
compress = FALSE,
dpi = 300)
adm1.centroids
rw_adm1@data$Prov_Name
adm1.centroids = data.frame(coordinates(rw_adm1)) %>%
rename(long = X1, lat = X2)
adm1.centroids = cbind(adm1.centroids,
province = rw_adm1@data$Prov_Name)
x = ggplot(adm1.df) +
aes(x = long, y = lat) +
geom_polygon(aes(group = id),
fill = grey30K) +
geom_path(aes(group = id),
colour = 'white',
data = rw.df,
size = 0.1) +
geom_path(aes(group = id, colour = id),
size = 0.2) +
geom_polygon(aes(group = id), #lakes
fill = colourLakes,
data = lakes.df) +
coord_equal() +
theme_blank() +
# scale_colour_brewer(palette = 'Set1') +
scale_colour_manual(values =c('Northern Province' = '#377eb8',
'Kigali City' ='#e41a1c',
'Western Province' = '#ff7f00',
'Southern Province' = '#984ea3',
'Eastern Province' = '#4daf4a')) +
geom_text(aes(x = long, y = lat, label = district),
data = rw.centroids,
colour = grey90K,
size = 0.7) +
geom_text(aes(x = long, y = lat, label = province),
data = adm1.centroids,
colour = grey90K,
size = 2)
ggsave('~/Documents/USAID/Rwanda/CHAIN/plots/rwanda_labeled.pdf',
width = 5, height = 3.5,
bg = 'transparent',
paper = 'special',
units = 'in',
useDingbats=FALSE,
compress = FALSE,
dpi = 300)
rw_adm1@data$Prov_Name
adm1.df$group
glimpse(adm1.df)
x = ggplot(adm1.df) +
aes(x = long, y = lat) +
geom_polygon(aes(group = id),
fill = grey30K) +
geom_path(aes(group = id),
colour = 'white',
data = rw.df,
size = 0.1) +
geom_path(aes(group = id, colour = id),
size = 0.2) +
geom_polygon(aes(group = id), #lakes
fill = colourLakes,
data = lakes.df) +
coord_equal() +
theme_blank() +
scale_colour_brewer(palette = 'Set1') +
# scale_colour_manual(values =c('Northern Province' = '#377eb8',
# 'Kigali City' ='#e41a1c',
# 'Western Province' = '#ff7f00',
# 'Southern Province' = '#984ea3',
# 'Eastern Province' = '#4daf4a')) +
geom_text(aes(x = long, y = lat, label = district),
data = rw.centroids,
colour = grey90K,
size = 1.2) +
geom_text(aes(x = long, y = lat, label = province),
data = adm1.centroids,
colour = grey90K,
size = 2)
ggsave('~/Documents/USAID/Rwanda/CHAIN/plots/rwanda_labeled.pdf',
width = 5, height = 3.5,
bg = 'transparent',
paper = 'special',
units = 'in',
useDingbats=FALSE,
compress = FALSE,
dpi = 300)
x=df_adm2 %>%
filter(project %like% 'CHAIN') %>%
group_by(Result, District) %>% summarise(n())
x
View(x)
df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
select(-Sector, -Sect_ID, -isSector) %>%
group_by(Province, Prov_ID,
District, Dist_ID, Result) %>%
summarise(numProj = n())
df_CHAIN = df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
select(-Sector, -Sect_ID, -isSector) %>%
group_by(Province, Prov_ID,
District, Dist_ID, Result) %>%
summarise(numProj = n())
View(df_CHAIN)
allDistricts = paste(northDistricts, southDistricts, kigaliDistricts,
eastDistricts, westDistricts, sep = ', ')
# Code to clean up Rwanda CHAIN IP data -----------------------------------
# Laura Hughes, April 2016, lhughes@usaid.gov
# Note: this code isn't impeccably documented, so please send questions
# if needed and I can clean it up. It's documented to make sense to me (hopefully) but probably makes no sense to others.
# Installing packages ------------------------------------------------
# In Mac OS X, need to install GDAL first.
# In terminal, install macports: https://www.macports.org/install.php
# Then 'sudo port install gdal'
# Go back to R and install rgdal
# install.packages("rgdal",  type="source")
# AND then rgeos.
# http://tlocoh.r-forge.r-project.org/mac_rgeos_rgdal.html
# Reinstall R, since El Capitan has problems w/ saving to usr/lib
# Install geos: http://www.kyngchaos.com/
# Then install :
library(llamar)
library(splitstackshape)
library(rgdal)
library(maptools)
library(rgeos)
library(raster)
library(rasterVis)
loadPkgs()
# Import and clean “raw” data -----------------------------------------------------
# geo data ----------------------------------------------------------------
# Raw shapefile in R
rwShp <- readShapePoly('~/Documents/USAID/Rwanda/data in/Rwanda_Admin3/Rwanda_Admin_Three.shp')
rwAdm3 = rwShp@data %>%
mutate(Province = ifelse(Province == 'Iburengerazuba',
'Western Province', as.character(Province))) %>%  # Iburengerazuba == West
group_by(District) %>%
mutate(isDistrict = dense_rank(Sector), # Create a flag if the data are district-level
isDistrict = ifelse(isDistrict == 1, 1, 0))
# Pull out all the Adm2 names for each Adm1
findAdm2 = function(adm1Name){
districts = rwAdm3 %>%
filter(isDistrict == 1,
Province %like% adm1Name) %>%
select(District)
districts = unique(as.character(districts$District)) # Eliminate duplicates; converts from a factor to a character
districts = paste0(districts, collapse = ', ') # Convert to a string
}
northDistricts = findAdm2('North')
southDistricts = findAdm2('South')
eastDistricts = findAdm2('East')
westDistricts = findAdm2('West')
kigaliDistricts = findAdm2('Kigali')
allDistricts = paste(northDistricts, southDistricts, kigaliDistricts,
eastDistricts, westDistricts, sep = ', ')
# Project locations -------------------------------------------------------
df = read_excel('~/Documents/USAID/Rwanda/CHAIN/datain/Locations of CHAIN IMs in Rwanda (2016-03-22).xlsm')
# Cleanup #1: rename columns
# Fix any values that are "all" region/country
df2 = df %>%
select(-`To include by Geo Center?`) %>% # Drop unneeded columns
rename(project = Project,
mechanism = `Implementing Mechanism`,
IP = `Implementing Partner`,
manager = `AOR/COR or Activity Manager`,
nationwide = `Nationwide?\r\n(If yes, skip the remaining columns)`) %>% # rename so easier to deal with
mutate(nationwide = ifelse(nationwide %in% c('Yes', 'yes', 'Y', 'y'), # If all of the province or country are selected, convert to a list of the Adm2 names.
allDistricts, NA),
`Kigali Province` = ifelse(`Kigali Province` %like% 'All',
kigaliDistricts, `Kigali Province`),
`Northern Province` = ifelse(`Northern Province` %like% 'All',
northDistricts, `Northern Province`),
`Southern Province ` = ifelse(`Southern Province ` %like% 'All',
southDistricts, `Southern Province `),
`Eastern Province` = ifelse(`Eastern Province` %like% 'All',
eastDistricts, `Eastern Province`),
`Western Province` = ifelse(`Western Province` %like% 'All',
westDistricts, `Western Province`))
# Split Nationwide
df2 = cSplit(df2, 'nationwide', ',')
# Split Kigali
df2 = cSplit(df2, 'Kigali Province', ',')
# Split Northern
df2 = cSplit(df2, 'Northern Province', ',')
# Split Western
df2 = cSplit(df2, 'Western Province', ',')
# Split Southern
df2 = cSplit(df2, 'Southern Province ', ',')
# Split Eastern
df2 = cSplit(df2, 'Eastern Province', ',')
# Convert to a tidy data frame
df2 = df2 %>%
gather(regCol, District, -project, -mechanism, -IP, -manager) %>% # convert from wide to long df
select(-regCol) %>% # Remove column generated by gathering
filter(!is.na(District), District != 'N/A') # remove NAs
# Add in the results data -----------------------------------------------------------------
results = read_excel('~/Documents/USAID/Rwanda/CHAIN/datain/RF Map to Partners.xlsx')
codebook = read_excel('~/Documents/USAID/Rwanda/CHAIN/datain/Partner Lookup Table.xlsx')
# Split the column based on the comma
results = cSplit(results, 'Partners', ',') %>%
gather(partnerNum, partner, -Level, -Result, -INWA) %>% # Convert from wide to long dataset
select(-partnerNum) %>%  # Remove artifact of split/gather
filter(!is.na(partner)) %>% # Remove blank lines
mutate(INWA = ifelse(INWA %like% 'No INWA', 0, 1)) # Convert to binary
# Translate the results into the full file
results = left_join(results, codebook, by = c("partner" = "Code"))
# Merge df w/ Adm names ---------------------------------------------------
df_full = full_join(df2, rwAdm3, by = c("District" = "District"))
df_full = full_join(df_full, results, by = c("IP" = "Implementing Partner",
"mechanism" = "Implementing Mechanism")) %>%
ungroup() %>%
group_by(Province, District, Sector, mechanism) %>%
mutate(isSector = dense_rank(Result),
isSector = ifelse(is.na(isSector), 1,
ifelse(isSector == 1, 1, 0)))
# Save the results
write.csv(df_full, '~/Documents/USAID/Rwanda/CHAIN/dataout/RW_projects.csv')
df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
group_by(mechanism) %>%
summarise(n())
df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
group_by(mechanism) %>%
summarise(n())
df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
select(mechanism, result)
df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
select(mechanism, Result)
df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
select(mechanism, Result) %>%
distinct() %>%
group_by(mechanism) %>%
summarise(n())
x = df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
select(mechanism, Result)
df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
ungroup() %>%
select(mechanism, Result) %>%
distinct() %>%
group_by(mechanism) %>%
summarise(n())
numResults_byMech = df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
ungroup() %>%
select(mechanism, Result) %>%
distinct() %>%
group_by(mechanism) %>%
summarise(n())
df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
ungroup() %>%
select(mechanism, Result) %>%
distinct() %>%
group_by(mechanism) %>%
summarise(num = n()) %>%
ungroup() %>%
arrange(desc(num))
numResults_byMech = df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
ungroup() %>%
select(mechanism, Result) %>%
distinct() %>%
group_by(mechanism) %>%
summarise(num = n()) %>%
ungroup() %>%
arrange(desc(num))
ggplot(numResults_byMech, aes(x = num, y = mechanism)) +
geom_bar()
ggplot(numResults_byMech, aes(x = num, y = mechanism)) +
geom_bar(stat = 'identity')
ggplot(numResults_byMech, aes(y = num, x = mechanism)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme_xgrid()
numResults_byMech$mechanism
numResults_byMech$mechanism =
factor(numResults_byMech$mechanism, numResults_byMech$mechanism)
ggplot(numResults_byMech, aes(y = num, x = mechanism)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme_xgrid()
ggplot(numResults_byMech, aes(y = num,
x = mechanism,
label = num)) +
geom_bar(stat = 'identity',
colour = grey50K) +
geom_label(nudge_y = -0.3,
colour = 'white', size = 4,
family = 'Segoe UI') +
coord_flip() +
theme_xgrid()
ggplot(numResults_byMech, aes(y = num,
x = mechanism,
label = num)) +
geom_bar(stat = 'identity',
colour = grey50K) +
geom_text(nudge_y = -0.3,
colour = 'white', size = 4,
family = 'Segoe UI') +
coord_flip() +
theme_xgrid()
# Number of Results / IM:
numResults_byMech = df_full %>%
filter(isDistrict == 1,
project %like% 'CHAIN') %>%
ungroup() %>%
select(mechanism, Result) %>%
distinct() %>%
group_by(mechanism) %>%
summarise(num = n()) %>%
ungroup() %>%
arrange((num))
numResults_byMech$mechanism =
factor(numResults_byMech$mechanism, numResults_byMech$mechanism)
ggplot(numResults_byMech, aes(y = num,
x = mechanism,
label = num)) +
geom_bar(stat = 'identity',
fill = grey50K) +
geom_text(nudge_y = -0.3,
colour = 'white', size = 4,
family = 'Segoe UI') +
coord_flip() +
theme_xgrid()
ggsave('~/Documents/USAID/Rwanda/CHAIN/plots/chain_numResults.pdf',
width = 10, height = 4,
bg = 'transparent',
paper = 'special',
units = 'in',
useDingbats=FALSE,
compress = FALSE,
dpi = 300)
